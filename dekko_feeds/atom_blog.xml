<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>blogblogblog...blog</title><link href="http://blog.dekkoshen.com/" rel="alternate"></link><link href="http://feeds.dekkoshen.com/dekko_feeds/atom_blog.xml" rel="self"></link><id>http://blog.dekkoshen.com/</id><updated>2015-02-23T22:00:00+08:00</updated><entry><title>在windows下設定簡單的python編寫環境</title><link href="http://blog.dekkoshen.com/20150223_pythonSetup.html" rel="alternate"></link><updated>2015-02-23T10:00:00+08:00</updated><author><name>dekko Shen</name></author><id>tag:blog.dekkoshen.com,2015-02-23:20150223_pythonSetup.html</id><summary type="html">&lt;p&gt;大致可分作兩部分，安裝軟體還有設定python的虛擬環境。&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;1.安裝軟體&lt;/h4&gt;
&lt;p&gt;主要要安裝兩個軟體，第一個當然就是Python，另一個則是編輯器。&lt;br /&gt;
Python的安裝很簡單，到&lt;a href="https://www.python.org"&gt;他的官網&lt;/a&gt;下載即可。裏頭有分做3.4跟2.7兩種版本，因為我是初學的，就直接選最新的來裝@@。接著來設定python指令的路徑，不然電腦不知道python放哪裡，可以參考此篇&lt;a href="http://pydoing.blogspot.tw/2010/11/python-pathset.html"&gt;&lt;em&gt;"Python於MS-Windows的命令列路徑設定"&lt;/em&gt;&lt;/a&gt;。至於編輯器就隨人喜好，有很多可以選像notepad++、sublime、atom還是windows記事本也行(最好不要...)。&lt;a href="http://notepad-plus-plus.org/zh/"&gt;notepad++&lt;/a&gt;是自由軟體免費又好用，而且作者還是台灣人~~現在最多人推薦&lt;a href="http://www.sublimetext.com/"&gt;sublime&lt;/a&gt;，介面相當漂亮，這個要70美元，但也是可以一直"試用"啦...他偶爾會跳出購買視窗來。都不另外裝也是可以，因為安裝python他也有附一個。&lt;/p&gt;
&lt;p&gt;我是裝了sublime，在這裡編輯python，只要按&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;ctrl + b
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;就會自動執行編譯相當方便，他都幫你設定好了。但是"強制停止"則需要自己另外設定，打開sublime上頭"Preferences"的"Key Bindings-User"，加入一行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;{&amp;quot;keys&amp;quot;: [&amp;quot;ctrl+shift+c&amp;quot;], &amp;quot;command&amp;quot;: &amp;quot;exec&amp;quot;, &amp;quot;args&amp;quot;: {&amp;quot;kill&amp;quot;: true} }
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;在執行python時，按&lt;code&gt;ctrl+shift+c&lt;/code&gt;就即可強制停止。&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;2.設定Python的虛擬環境：virtualenv&lt;/h4&gt;
&lt;p&gt;不同的函數庫有可能會互相干擾，所以建議要設定虛擬環境，讓不同計畫使用不同的函數庫環境。只是我不確定干擾的情況很常發生嗎？是因為定義的名稱相同所造成的？現在我還不清楚。&lt;br /&gt;
在網路上看到的虛擬環境有好幾種，像&lt;a href="https://virtualenv-chinese-docs.readthedocs.org/en/latest/"&gt;virtualenv&lt;/a&gt;、&lt;a href="http://virtualenvwrapper.readthedocs.org/en/latest/index.html#"&gt;virtualenvwrapper&lt;/a&gt;、&lt;a href="http://pythonbrew.readthedocs.org/en/latest/"&gt;pythonbrew&lt;/a&gt;等，其中pythonbrew對windows並不支援。virtualenv只有對單一虛擬環境的管理，譬如創造虛擬環境、進入、退出等，但並沒有對多個不同環境的整合管理，這要virtualenvwrapper才辦得到。一開始我試著裝裝看virtualenvwrapper，但還未成功，最後只先裝了virtualenv...對virtualenvwrapper有興趣可以看看這篇&lt;a href="http://www.asyndetic.com/2012/05/01/virtualenvwrapper-is-for-windows-users-too/"&gt;&lt;em&gt;"virtualenvwrapper is for Windows users too"&lt;/em&gt;&lt;/a&gt;的安裝教學。底下virtualenv的使用說明，主要是參考這篇&lt;a href="http://www.openfoundry.org/tw/tech-column/8516-pythons-virtual-environment-and-multi-version-programming-tools-virtualenv-and-pythonbrew"&gt;&lt;em&gt;"Python的虛擬環境及多版本開發利器"&lt;/em&gt;&lt;/a&gt;學的。&lt;/p&gt;
&lt;h5&gt;2.1 安裝virtualenv&lt;/h5&gt;
&lt;p&gt;安裝python3時，他已經幫你安裝好了pip。所以接下來要安裝virtualenv，只需輸入&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pip install virtualenv
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;即可安裝完畢。&lt;/p&gt;
&lt;h5&gt;2.2 建立虛擬環境&lt;/h5&gt;
&lt;p&gt;因為virtualenv不知道所有虛擬環境的分別位置，所以我是把他們集中在某個資料夾中來集中管理。接下來就來建個虛擬環境試試看，將指令列移動到欲管理的資料夾，輸入&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;virtualenv 環境名稱
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;這樣就完成了。但如果我希望所有pip套件都必須在虛擬環境下安裝，則可在使用者資料夾中的".bashrc"，裡面多加一行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;export PIP_REQUIRE_VIRTUALENV=true
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;避免弄亂原始的python環境。&lt;/p&gt;
&lt;h5&gt;2.3 進入及退出虛擬環境&lt;/h5&gt;
&lt;p&gt;剛建立好環境後，他並不會自動進入，必須在指令列輸入此行才會進入&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;source 到環境資料夾的路徑/環境資料夾/Scripts/activate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;假設我建立了"ENV_pelican"環境，如果成功進入的話，他會在每次的輸出後顯示"(ENV_pelican)"，這裡我是使用git bash。至於退出就比較簡單了，輸入&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;deactivate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;即可回到原始python環境。&lt;/p&gt;
&lt;p&gt;但如果不是在指令列的環境想要使用某個虛擬環境，可以在py檔裡面加上這段(適用於python3)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;activate_this = r&amp;#39;C:\到環境資料夾的路徑\Scripts\activate_this.py&amp;#39;
exec(compile(open(activate_this, &amp;quot;rb&amp;quot;).read(), activate_this, &amp;#39;exec&amp;#39;), dict(__file__=activate_this))
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;執行時就會自動載入了。&lt;/p&gt;</summary><category term="python"></category><category term="virtualenv"></category></entry><entry><title>架pelican blog小記</title><link href="http://blog.dekkoshen.com/20150220_buildPelicanBlog.html" rel="alternate"></link><updated>2015-02-23T22:00:00+08:00</updated><author><name>dekko Shen</name></author><id>tag:blog.dekkoshen.com,2015-02-20:20150220_buildPelicanBlog.html</id><summary type="html">&lt;p&gt;架一個pelican blog最重要的就是會用google就行啦~&lt;br /&gt;
當然是簡單的那種，跟這裡一樣!! 基本上我是用windows來架，感覺會比其他的作業系統複雜一點，但我也沒比較過=___=，不是太困難啦~有點耐心就行了。&lt;/p&gt;
&lt;p&gt;google一下就有看不完的資料啦!! 譬如說:  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="http://pelican.readthedocs.org/en/latest/index.html"&gt;官方的文件&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://www.circuidipity.com/pelican.html"&gt;Build a blog using the Pelican static site generator&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://www.circuidipity.com/github-pages.html"&gt;Host a blog on GitHub Pages&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://farseerfc.me/try-pelican.html"&gt;嘗試一下 Pelican&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://potatola.github.io/setup-pelican-github.html"&gt;Github pages和Pelican搭建靜態博客&lt;/a&gt;&lt;br /&gt;
&lt;a href="http://duncanlock.net/blog/2013/05/17/how-i-built-this-website-using-pelican-part-1-setup/"&gt;How I built this website, using Pelican&lt;/a&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;他們都說了相當清楚，結束!!&lt;/p&gt;
&lt;p&gt;...但為了練習一下markdown怎麼用，所以來稍微打一下。我的環境是windows 7還有Python 3.4。在github上頭架一個pelican部落格大致分做以下步驟:&lt;br /&gt;
1.  &lt;a href="#20150220_python"&gt;安裝python：跑pelican用的&lt;/a&gt;&lt;br /&gt;
2.  &lt;a href="#20150220_pelican"&gt;安裝及設定pelican：組合html、css用的&lt;/a&gt;&lt;br /&gt;
3.  &lt;a href="#20150220_article"&gt;開始寫撰寫blog：輸出及測試&lt;/a&gt;&lt;br /&gt;
4.  &lt;a href="#20150220_theme"&gt;美化一下blog：設定基本資料及主題外觀&lt;/a&gt;&lt;br /&gt;
5.  &lt;a href="#20150220_github"&gt;將blog發佈到github上(&lt;em&gt;請先參考別人的方法！這裡我碰到困難，是用別種方法上傳...&lt;/em&gt;)&lt;/a&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;&lt;a name="20150220_python"&gt;&lt;/a&gt;1.安裝python&lt;/h4&gt;
&lt;p&gt;先到&lt;a href="https://www.python.org"&gt;python的官網&lt;/a&gt;下載囉~裏頭有分做3.4跟2.7兩種版本。這兩個版本有些指令並不相容，詳情請google，我也不是很清楚所以就直接安裝了3.4版。接著要來設定python指令的路徑，不然電腦不知道python放哪裡，請參考此篇&lt;a href="http://pydoing.blogspot.tw/2010/11/python-pathset.html"&gt;&lt;em&gt;"Python於MS-Windows的命令列路徑設定"&lt;/em&gt;&lt;/a&gt;。另外建議安裝virtualenv，為了不要讓不同的函數庫互相衝突。&lt;/p&gt;
&lt;p&gt;詳細一點可以看我這篇&lt;a href="http://blog.dekkoshen.com/20150223_pythonSetup.html"&gt;&lt;em&gt;"在windows下設定簡單的python編寫環境"&lt;/em&gt;&lt;/a&gt;的設定。&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;&lt;a name="20150220_pelican"&gt;&lt;/a&gt;2.安裝及設定pelican&lt;/h4&gt;
&lt;h5&gt;2.1 安裝pelican:&lt;/h5&gt;
&lt;p&gt;&lt;a href="http://pelican-cn.readthedocs.org/en/latest/quickstart.html"&gt;pelican說明文件&lt;/a&gt;其實已經寫得蠻清楚的，打開windows指令列然後輸入以下，結束!!!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pip install pelican markdown
&lt;/pre&gt;&lt;/div&gt;


&lt;h5&gt;2.2 設定pelican project:&lt;/h5&gt;
&lt;p&gt;在指令列移動到你想要放pelican blog的地方，然後輸入&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pelican-quickstart
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;他會囉哩八說地問一堆問題，回答完就大功告成啦~~&lt;br /&gt;
(如果有缺甚麼套件就使用&lt;code&gt;pip install XXXX&lt;/code&gt;安裝。)&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;&lt;a name="20150220_article"&gt;&lt;/a&gt;3.開始撰寫blog&lt;/h4&gt;
&lt;h5&gt;3.1 簡單的第一篇:&lt;/h5&gt;
&lt;p&gt;此時你的資料夾裡面會有一叫做"content"的資料夾，這個地方就是要擺文章的地方。之前的一堆問題他會問你要用哪一個格式發表文章，我是選擇用markdown。這個格式非常簡單，跟一般text打起來差不多，花個十分鐘把&lt;a href="http://markdown.tw/"&gt;這個&lt;/a&gt;看完，接下來練習打一篇(就是現在這一篇)就差不多了。接下來在這個"content"資料夾新增一個檔案，比方說"firstTime.md"，這就是一篇blog！裡面可以打&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;嗨&lt;/span&gt;&lt;span class="o"&gt;~~&lt;/span&gt;&lt;span class="err"&gt;第一篇&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;
&lt;span class="n"&gt;Authors&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;三重金城武&lt;/span&gt;

&lt;span class="err"&gt;今天是情人節&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="err"&gt;我學會用大嘴鳥部落格。真幸福&lt;/span&gt;&lt;span class="o"&gt;~~~&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;接下來就開始用pelican把上頭的文章轉換成html、css囉~在指令列裏頭輸入&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pelican content
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;他會把輸出的網頁會放在"output"的資料夾裡。 &lt;/p&gt;
&lt;h5&gt;3.2 預覽一下:&lt;/h5&gt;
&lt;p&gt;接下來我們稍微預覽一下這個blog長甚麼樣子@@，在&lt;a href="http://pelican-cn.readthedocs.org/en/latest/quickstart.html"&gt;官方文件的quickstart&lt;/a&gt;中是說指令列移至"output"的資料夾，輸入&lt;code&gt;python -m SimpleHTTPServer&lt;/code&gt;。不過你若是灌python3.4，請換另一個不simple的server~~&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;python -m http.server
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;接著打開你的瀏覽器輸入 http://localhost:8000/ 就可以看到blog的誕生啦!!!恭喜恭喜~&lt;br /&gt;
這個指令會讓你沒辦法編輯...指令視窗被拿去顯示伺服器的資訊，按ctrl+c可以終止。但這樣一直進進出出很累，其實可以寫一個python的&lt;a href="https://dl.dropboxusercontent.com/u/14624624/website_tools/0_HTTPsever.py"&gt;小程式&lt;/a&gt;丟在output的資料夾裡面，要預覽時點開他還可以繼續編輯，這樣方便多了。&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;&lt;a name="20150220_theme"&gt;&lt;/a&gt;4.簡單的美化一下&lt;/h4&gt;
&lt;h5&gt;4.1 設定一下blog的基本資料:&lt;/h5&gt;
&lt;p&gt;這個blog的基本設定都會放在"pelicanconf.py"這個檔案裏，所以用你喜歡的文字編輯器打開他。以我的設定為例，可以看到&lt;a name="20150220_SITEURL"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c"&gt;# -*- coding: utf-8 -*- #&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;

&lt;span class="c"&gt;#網站的基本資料，如同字面所述&lt;/span&gt;
&lt;span class="c"&gt;#其中的SITEURL，若沒有自己的domain先不要設，&lt;/span&gt;
&lt;span class="c"&gt;#後頭要設成github repository的發佈網址&lt;/span&gt;
&lt;span class="n"&gt;AUTHOR&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;dekko Shen&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITENAME&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;blogblogblog...blog&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt;      &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://blog.dekkoshen.com&amp;#39;&lt;/span&gt; 
&lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;zh&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;TIMEZONE&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Asia/Taipei&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;DATE_FORMATS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;en&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;usa&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;%a, &lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt; %b %Y&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;zh&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;chs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;%Y-%m-&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s"&gt;, %a&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="c"&gt;#連結的資料夾&lt;/span&gt;
&lt;span class="n"&gt;PATH&lt;/span&gt;         &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;content&amp;#39;&lt;/span&gt;     &lt;span class="c"&gt;#放文章的資料夾名稱&lt;/span&gt;
&lt;span class="n"&gt;STATIC_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;images&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;    &lt;span class="c"&gt;#內部連結的資料夾名稱，要放在content裡&lt;/span&gt;

&lt;span class="c"&gt;# 每篇文章的網址設定，&amp;#39;slug&amp;#39;是待會要設在文章裡面的標籤，會作為網頁名稱&lt;/span&gt;
&lt;span class="n"&gt;ARTICLE_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;{slug}.html&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;ARTICLE_URL&lt;/span&gt;     &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;{slug}.html&amp;#39;&lt;/span&gt;

&lt;span class="c"&gt;#要選擇哪一個外觀主題&lt;/span&gt;
&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;./myPelicanTheme/basic/&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;         &lt;span class="c"&gt;#一頁要放幾篇文章&lt;/span&gt;

&lt;span class="c"&gt;# 設定feed的地方&lt;/span&gt;
&lt;span class="n"&gt;FEED_DOMAIN&lt;/span&gt;           &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;FEED_ALL_ATOM&lt;/span&gt;         &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;FEED_ATOM&lt;/span&gt;             &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_ATOM&lt;/span&gt;    &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;TRANSLATION_FEED_ATOM&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;AUTHOR_FEED_ATOM&lt;/span&gt;      &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;
&lt;span class="n"&gt;AUTHOR_FEED_RSS&lt;/span&gt;       &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;None&lt;/span&gt;

&lt;span class="c"&gt;# Blogroll&lt;/span&gt;
&lt;span class="n"&gt;LINKS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;我的攝影網站&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://dekkoShen.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
         &lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# Social widget&lt;/span&gt;
&lt;span class="n"&gt;SOCIAL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;facebook&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;https://www.facebook.com/dekko.shen&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;instagram&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://instagram.com/dekkoshen/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;DISQUS_SITENAME&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;dekkosblogblogblog&amp;#39;&lt;/span&gt;  &lt;span class="c"&gt;#DISQUS留言板的代號&lt;/span&gt;

&lt;span class="c"&gt;# 如果要用python http.server測試，最好先將他 uncomment起來，&lt;/span&gt;
&lt;span class="c"&gt;# 不然一按其他的連結會自動跳成上面所設定的&amp;#39;SITEURL&amp;#39;&lt;/span&gt;
&lt;span class="c"&gt;#RELATIVE_URLS = True&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;關於其他的設定可以參考&lt;a href="http://pelican.readthedocs.org/en/latest/settings.html"&gt;官方文件的Settings&lt;/a&gt;，有相當多啊！&lt;/p&gt;
&lt;h5&gt;4.2 文章的基本設定:&lt;/h5&gt;
&lt;p&gt;因為我是選擇用markdown的格式，如果要寫一篇blog，我會新增一個檔案'fileName.md'到'content'的資料夾裡。這個檔案會像這種格式&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;這可是另一篇&lt;/span&gt;
&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2015&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;14&lt;/span&gt; &lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;59&lt;/span&gt;
&lt;span class="n"&gt;Slug&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20150214&lt;/span&gt;&lt;span class="n"&gt;_moon&lt;/span&gt;
&lt;span class="n"&gt;Category&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;有的沒的&lt;/span&gt;
&lt;span class="n"&gt;Tags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;心情&lt;/span&gt;
&lt;span class="n"&gt;Authors&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;三重金城武&lt;/span&gt;
&lt;span class="n"&gt;Summary&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="err"&gt;今日情人&lt;/span&gt;

&lt;span class="err"&gt;巧克力怎麼不溶我手啊啊啊&lt;/span&gt;&lt;span class="o"&gt;!!!!!&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;前面那堆metadata的功用就如同字面所述，而&lt;code&gt;Slug&lt;/code&gt;就是在設定這篇blog的網址名稱，所以他看起來會像是"http://www.XXXX.com/20150214_moon.html"。注意喔！&lt;em&gt;這個slug必須是唯一的&lt;/em&gt;，不然若兩篇文章是同一個slug會不知道要選哪一篇(我也沒試過)。&lt;/p&gt;
&lt;h5&gt;4.3 選擇一個主題吧:&lt;/h5&gt;
&lt;p&gt;接下來就要來美化blog的頁面啦!剛裝好的pelican只有兩個主題可以選，他們會放在&lt;code&gt;Python34/Lib/site-packages/pelican/themes&lt;/code&gt;裡面，不過看起來不怎麼樣啊！但我也不會製作theme，所以只好抓別人的來改一改，嘿嘿嘿。pelican的github&lt;a href="https://github.com/getpelican/pelican-themes"&gt;裡面&lt;/a&gt;提供了許多的theme可以選擇，右邊有個&lt;a href="https://github.com/getpelican/pelican-themes/archive/master.zip"&gt;"download zip"&lt;/a&gt;可以先把他們全部抓下來，而從&lt;a href="http://pelicanthemes.com/"&gt;這裡&lt;/a&gt;可以預覽一下剛剛那些theme大概長甚麼樣子。選擇好theme，就把這個資料夾的位置設定在"pelicanconf.py"中"THEME"裡面就大功告成啦!&lt;/p&gt;
&lt;p&gt;這時候可以把blog用&lt;code&gt;pelican content&lt;/code&gt;輸出看看，但有可能會出現這樣的錯誤訊息&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;CRITICAL&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;unorderable&lt;/span&gt; &lt;span class="n"&gt;types&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Article&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;Article&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;應該是有些theme的templates有誤。可以打開theme資料夾中的"tags.html"，裡面會有類似的一段程式&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;ul&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;square&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="nv"&gt;article&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="nv"&gt;articles&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nf"&gt;sort&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
    &lt;span class="nt"&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class="na"&gt;href=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;SITEURL&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;/&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;article.url&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;article.title&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endfor&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;將裡面的&lt;code&gt;sort&lt;/code&gt;刪掉變成&lt;code&gt;{% for article in articles %}&lt;/code&gt;，應該就可以了。如果不行試著把cache清掉&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pelican --ignore-cache content/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;再跑一次試試看。&lt;/p&gt;
&lt;hr /&gt;
&lt;h4&gt;&lt;a name="20150220_github"&gt;&lt;/a&gt;5.發佈在github上頭&lt;/h4&gt;
&lt;h5&gt;5.1 安裝git及申請github帳號:&lt;/h5&gt;
&lt;p&gt;git是版本控制系統，&lt;a href="https://github.com/"&gt;github&lt;/a&gt;則是分享git計畫的網路平台，可以把東西丟在上頭，不過要用git去控制才行。而擺在github上面的東西必須要公開，不然就要收錢啦！這很適合拿來架靜態的網站，反正本來就是要公開的東西...&lt;/p&gt;
&lt;p&gt;先申請一個github帳號，但因要用github就必須要安裝git，不過很簡單，&lt;a href="https://github.com/"&gt;github&lt;/a&gt;網站已經有提供在windows的控制軟體，他會自動幫你安裝好git了。&lt;/p&gt;
&lt;h5&gt;5.2 準備發佈:&lt;/h5&gt;
&lt;p&gt;&lt;em&gt;&lt;b&gt;這裡請先參考別人作法！像這篇&lt;a href="http://potatola.github.io/setup-pelican-github.html"&gt;&lt;em&gt;"Github pages和Pelican搭建靜態博客"&lt;/em&gt;&lt;/a&gt;。&lt;/b&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;因為我沒辦法順利執行這個指令&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;ghp&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="n"&gt;master&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;會出現這樣的錯誤訊：息&lt;code&gt;TypeError: Type str doesn't support the buffer API&lt;/code&gt;&lt;br /&gt;
目前我查不出來該怎麼處理，不知是不是python3.4的問題？所以我先用別種方法來上傳blog，以後再來研究哪裡出錯好了...  &lt;/p&gt;
&lt;p&gt;我的方法麻煩很多，首先將指令列移動到&lt;em&gt;&lt;b&gt;"output"的資料夾&lt;/b&gt;&lt;/em&gt;，然後打上&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git init
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;此時會多一個".git"的隱藏資料夾，用來儲存不同版本的差異。因為現在是在master的分支上，如果要在github上發佈網頁必須要在"gh-pages"的分支，所以我們要切過去&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git checkout -b gh-pages
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;這時候指令列的位置後面應該會寫著&lt;code&gt;(gh-pages)&lt;/code&gt;。接下來我們要把這個資料夾的東西包裝成一個新的版本(commit)，準備要發佈到github上頭。步驟如下:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git add -A
git commit -m &amp;quot;你的註解&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;第一行&lt;code&gt;git add -A&lt;/code&gt;是把所有的資料都丟到包裝區；第二行的&lt;code&gt;git commit&lt;/code&gt;則是把包裝區的東西包成一個新版本放到repository裡面。它的結構像是&lt;/p&gt;
&lt;p&gt;&lt;img alt="git structure" src="https://lh3.googleusercontent.com/-2j1LUMMibNM/VOhDbtwBwhI/AAAAAAAAVUU/BCoj_yrbVe4/w500-h173-no/123.png" /&gt;&lt;/p&gt;
&lt;p&gt;因為最終的目的是要上傳到github，所以我們先到github開一個新的repository。但注意，要是你沒有自己的domain，這個repository名稱將會決定最後這個blog的網址喔~會是這個樣子  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;http://userName.github.io/repositoryName
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;em&gt;注意，若沒有自己的domain，要將&lt;a href="#20150220_SITEURL"&gt;pelicanconf.py中的SITEURL&lt;/a&gt;修改成上述的網址。&lt;/em&gt;建立好以後，應該會看到一個連線網址 https://github.com/userName/repositoryName.git，我們要用它來跟本機做連線，所以先做名叫"origin"的一個遙控器&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git remote add origin https://github.com/userName/repositoryName.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;現在就可以來發布我們的部落格啦！只要打上&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git push origin gh-pages
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;就大功告成了！可以到http://userName.github.io/repositoryName看看是否有看到自己的blog。&lt;/p&gt;
&lt;h5&gt;5.3 之後的發佈流程:&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;編輯文章，然後執行&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;pelican content/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;輸出到"output"的資料夾，再預覽及修改。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;修改完後，將指令列移至"output"的資料夾，依序輸入&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git add -A
git commit -m &amp;quot;你的註解&amp;quot;
git push origin gh-pages
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;即可發佈。上述流程以圖解就像是&lt;/p&gt;
&lt;p&gt;&lt;img alt="git_structure" src="https://lh3.googleusercontent.com/-u4tV04Smc0E/VOhap1uIs0I/AAAAAAAAVUo/IT8Grtuj1v4/w550-h204-no/git_structure.png" /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;但我的方法比別人麻煩了好幾步=___= 以後再來研究那個錯誤是啥...&lt;/p&gt;</summary><category term="pelican"></category><category term="github"></category></entry><entry><title>嗨~~第一篇</title><link href="http://blog.dekkoshen.com/20150219_first.html" rel="alternate"></link><updated>2015-02-19T22:00:00+08:00</updated><author><name>dekko Shen</name></author><id>tag:blog.dekkoshen.com,2015-02-19:20150219_first.html</id><summary type="html">&lt;p&gt;&lt;img alt="test" src="https://lh3.googleusercontent.com/-X0w_OlUH3mg/VMiAa4mYVPI/AAAAAAAAVMo/rjndpVE-_18/w333-h500-no/002.jpg" style="width:333px;"&gt;&lt;/p&gt;
&lt;p&gt;有點頭昏...&lt;/p&gt;</summary><category term="照片"></category></entry></feed>